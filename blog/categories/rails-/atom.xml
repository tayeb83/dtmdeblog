<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails, | مدونة الطيب الضادي]]></title>
  <link href="http://tayeb83.github.com/dtmdeblog/blog/categories/rails-/atom.xml" rel="self"/>
  <link href="http://tayeb83.github.com/dtmdeblog/"/>
  <updated>2015-07-21T22:47:30+02:00</updated>
  <id>http://tayeb83.github.com/dtmdeblog/</id>
  <author>
    <name><![CDATA[طيب مرابطي]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[تهيئة gedit من أجل روبي أون رايلز]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/11/09/gedit-configuration/"/>
    <updated>2013-11-09T23:07:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/11/09/gedit-configuration</id>
    <content type="html"><![CDATA[<p>أنا لست محب للمحررات التي معظمها ثقيلة نوعا ما و إن كانت فعالة مثل Eclipse أو RubyMine، لهذا فإنني أُُُفضل  محررا بسيط مثل gedit على الubuntu  مع استعمال حوسبة تساعد في تهيئة المحرر.</p>

<!-- more -->


<p>لو تستعملون  textmate فسنحاول أن نحول الgedit لشبيه هذا المحرر حتى نكون فعالين. لهذا و حتى نُحسن من المحرر gedit سنتعمل مجموعة من الحوسبة.</p>

<p>في البداية سنضيف مخزن PPA يحتوي على حوسبات رايلز. داخل الterminal, يمكنكم ارسال الأمر التالي :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/geditConfig/intr1.png" title="intr1"/></p>

<p>بعدها نقوم  بتثبيث حزمة المكونات الإضافية داخل أبونتو و تلك المتعلقة برايلز من خلال المخزن الذي أضفناه من خلال الأمر التالي كما هو موضح  في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/geditConfig/intr2.png" title="intr2"/></p>

<p>انتهينا، الآن يمكننا فتح  gedit و الذهاب إلى الPreferences و من ثم الأيقونة greffons للحصول على الأدوات المتعددة التي تم تثبيثها كما هو موضح في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/geditConfig/pref002.png" title="pref2"/></p>

<p>أو الأيقونة  : Polices &amp; Couleurs لتبديل الألوان و التي تسمح باختيار التيمات التي تريدونها، على سبيل المثال : تيمات الموقع railscast للذين يعرفونه كما هو موضح في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/geditConfig/pref003.png" title="pref3"/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[تسريع التعامل مع أوامر rails]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/07/31/zeus-rails/"/>
    <updated>2013-07-31T16:56:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/07/31/zeus-rails</id>
    <content type="html"><![CDATA[<p>المتعامل مع رايلز لاحظ بطأ ارسال الأوامر و أخذها و قت كبير للتنفيذ، للآسف هذه الوضعية تصعب من مهمة  المبرمج و تعطل عجلة الإنتاجية و روح العمل لديه.</p>

<p>هذا المشكل اشتكى منه الكثير من المطورين على مستوى منصة العمل، مما عجل بظهور بعض الجيمات لعل أبرزها zeus و الذي سأقوم بشرحه في هذا المقال بايجاز.</p>

<!-- more -->


<p>zeus عبارة عن gem يساعد بعد تثبيثه في تسريع تنفيذ الأوامر داخل rails.</p>

<h2>تثبيث zeus :</h2>

<p>يمكنكم تثبيث هذا الجيم بالطريقة المعتمدة في تثبيث الجيمات في روبي و ذلك بارسال الأمر التالي :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install zeus</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>تفعيل zeus :</h2>

<p>لتفعيل الجيم و العمل به ما يجب القيام به هو الدخول في ملف مشروعكم rails و ارسال الأمر التالي :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ zeus start</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>هذا الأمر سيرسل أوامر أخرى يسعى من خلالها الجيم إلى تحميل المشروع حتى يمكننا إرسال الأوامر رايلز المعروفة من خلاله، و هذا كما توضحه  الصورة، للإشارة إلى أن اللون الأخضر يشير إلى كل الأوامر التي يمكننا ارسالهابواسطة الجيم. مع العلم أنه عند إرسال الأمر يتغير لون الأوامر من البرتقالي إلى الأخضر حسب سرعة تحميل المشروع من الجيم.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_start.png" title="zeus starting"/></p>

<p>بعدها لم يبقى إلى ارسال الأوامر الكلاسيكية لرايلز مسبقة بكلمة zeus كما هو موضح في الصور :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_server.png" title="zeus server"/></p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_console.png" title="zeus console"/></p>

<p>لحد الآن الأمور عادية و لكن الفرق كبير بين سرعة ارسال الأوامر بالطريقة العادية وباستعمال هذا الجيم. و الدليل هي هذه المقارنة البسيطة بين سرعة تنفيذ الأوامر بدون و باستعمال الجيم zeus، فإذا أرسلنا مثلا الأمر :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails console</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>فالوقت الذي تستغرقه موضح في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/time_rails_c.png" title="rails console time"/></p>

<p>و هو وقت كبير مقارنة بالأمر المرسل بواسطة الجيم zeus كما هو موضح في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_time_console.png" title="zeus console time"/></p>

<p>تقبل الله صيامكم و قيامكم....</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[موارد مفيدة لكل مبرمجRails]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/28/imporatenresourceforrails/"/>
    <updated>2013-02-28T23:59:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/28/imporatenresourceforrails</id>
    <content type="html"><![CDATA[<p>في هذا المقال أحببت أن أقدم لكم بعض الموارد التي انتقيتها من هنا و هناك و التي أرى أنها مفيدة إن لم نقل أساسية لكل مطور بمنصة Ruby On Rails.</p>

<!-- more -->


<h2><a href="http://edgeguides.rubyonrails.org/">Railsguides</a></h2>

<p>تعتبر المورد الرئيسي لكل مطور Rails و خاصة للمبيتدئين وهي تحتوي على كل ما نحتاجه للبدئ بالتطوير و العمل على المنصة.</p>

<h2><a href="https://www.ruby-toolbox.com/">Rubytoolbox</a>  </h2>

<p>هذه المنصة تحتوي على العديد من المكتبات البرمجية و التي تسمى الGem. يمكنكم البحث عن أي مكتبة بواسطة تصنيفها، اسمها...كما يمكنكم الحصول على الكثير من المعلومات المرفقة على شكل احصائيات مختلفة حول عدد التحميلات أو التوثيق الخاص بالمكتبة.</p>

<h2><a href="http://railscasts.com/">Railscasts</a></h2>

<p>تعتبر قاعدة بيانات كبيرة لعدة دروس مصغرة حول Rails على شكل تسجيلات شاشة (screencast)، مفيدة جدا خاصة إذا أردنا لمحة سريعة عن كيفية عمل مكتبة معينة.</p>

<h2><a href="http://www.codeschool.com/">CodeSchool</a></h2>

<p>عبارة عن منصة تعلم تسمح باكتساب مهارات في مجالات متنوعة في برمجة الويب. الفكرة جميلة و الدروس مقسمة لمجموعات من التسجيلات المصورة و بعد كل درس هناك مجموعة من التمارين تسمح بعد حلها طبعا بالانتقال إلى مستوى أعلى في الدرس. أغلب الدروس مدفوعة الثمن و لكن هناك بعض الدروس مجانية و خاصة الدرس الخاص بRails  <a href="http://www.codeschool.com/courses/rails-for-zombies-redux/">RailsforZombies</a> أما من أراد كل الدروس فيمكنم مشاهدتها عن طريق دفع اشتراك شهري،</p>

<p>في الأخير آنوه لقلة الموارد العربية في هذا المجال و ان كانت هناك بعض الموارد القليلة حول Rails مع هذا و بالاضافة لمدونتي و التي اكتب فيها مقالات تطبيقية حول المنصة هناك عمل جميل يقوم به الأخ محمد الشيخ في  <a href="http://blog.msheikh.me/">مدونته</a> أيضا لتوصيل و لتعليم التقنية باللغة العربية.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[تثبيث الoctopress]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/09/install-octopress/"/>
    <updated>2013-02-09T18:06:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/09/install-octopress</id>
    <content type="html"><![CDATA[<p>في هذا المقال سوف أشرح  لكم كيفية تثبيث ال<a href="http://octopress.org/">octopress</a> و استعماله مع الgithub كمحرك و مولد لصفحات تابثة لكم بطريقة  سهلة و بسيطة.</p>

<h2>أول سؤال ماهو الOctorpress ؟ </h2>

<!-- more -->


<p> هو عبارة عن منصة عمل طورها Brandon Mathis لل jekyll. للتدوين بالjekyll كان لابد من كتابة قوالب الhtml الخاصة، الCSS، الJavascript و إعداد التكوين الخاص بك. و لكن مع الOctopress كل هذا يصبح شفاف و المنصة تقوم بكل هذه الأعمال فور تثبيثها.
شخصيا الشيء الذي دفعني لاستعمال الOctopress هو فضولٌٌ أردت من خلاله التدرب و لمس كل مايتعلق بالgit و الgithub، و بالفعل فلقد ساعدني هذا الفضول إلى كسر حاجز الخوف بيني و بين أوامر الgit هذا من جانب أما الجانب الثاني هو امتلاك مدونة الكتابة فيها تشعرك كل يوم أنك فعلا hacker مع كل الأدوات التي استعملها و الأوامر التي أرسلها لكتابة مقال واحد، فرق سوف ترونه بلا شك لو استعملتم هذه المنصة.</p>

<h2>تثبيث الOctopress :</h2>

<p>أول شيء قبل بدأ تثبيث المنصة هو إطلاعكم على مايجب تثبيثه قبل البدأ في تثبيث الOctopress.</p>

<ol>
<li>تثبيث ال git : كنت قد شرحت عملية تثبيث الgit على نظام الubuntu في <a href="http://tayeb83.github.com/dtmdeblog/blog/2012/07/08/gitinstallpart2/">مقال سابق </a>  في مدونتي باستطاعتكم الإطلاع عليه و إن شئتم يمكنكم تتبع الخطوات المشروحة و بطريقة مفصلة حسب نوع النظام على الرابط <a href="http://git-scm.com/book/en/Getting-Started-Installing-Git">http://git-scm.com/book/en/Getting-Started-Installing-Git</a>.</li>
<li>تثبيث Ruby : نفس الشيئ كنت قد وضحت هذه العملية في مقال سابق و إن كانت الغاية هي تثبيث Ruby On Rails. و لكن أنصح لتثبيث الRuby  ولتسهيل التعامل مع النسخ المختلفة تثبيث  <a href="https://rvm.io/rvm/install">RVM </a>أو الRuby Version Manager و الذي سيسهل لكم بشكل لن تتصورونه تثبيث ال Ruby و استعمال النسخة التي تريدونها لذلك.</li>
<li>إنشاء المستودع الخاص بكم على الgithub، تسجيل الدخول و إنشاء المستودع للمزيد يمكنكم الإطلاع على <a href="http://tayeb83.github.com/dtmdeblog/blog/2012/09/23/github/">مقال سابق
</a> في مدونتي.</li>
<li>إنشاء ملف داخلي يحتوي المدونة، لنفرض أنكم سميتموه "modawinaty".</li>
</ol>


<p>بعدها لم يبقى علينا سوى تثبيث المنصة على الملف الذي قمتم بإنشاءه، و ذلك باتباع الخطوات التالية :</p>

<ol>
<li>git remote add octopress git://github.com/imathis/octopress.git</li>
<li>git pull octopress master</li>
<li>git checkout -b source</li>
<li>git remote add origin git@github.com:YourUserName/YourRepoName.git</li>
<li>git push origin source</li>
<li>rvm rvmrc trust و ذلك بعد تثبيث ال RVM</li>
<li>rvm reload</li>
<li>rake setup_github_pages في بعض الحالات يجب إرسال الأمرbundle install</li>
<li>rake install
بعدها يجب الذهاب إلى الملف config.yml و تحديث السطر المقابل للroot باسم المستودع الذي أنشأتموه في الgithub في مثالنا : moudawinaty.</li>
<li>Rake Generate</li>
<li>Rake Deploy</li>
</ol>


<p>و لأنني أحبكم في الله، فلقد سجلت لكم فيديو مفصل لجميع الخطوات التي ستسمح لكم بإنشاء أول مدونة باستعمال الoctopress و تحميلها على الgithub، في الرايط التالي :</p>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/Bi8t6EmePD0 "></iframe></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[وضع مخطط لقاعدة بيانات]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/01/schema-definition/"/>
    <updated>2013-02-01T21:25:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/01/schema-definition</id>
    <content type="html"><![CDATA[<p>نحن بصدد تطوير تطبيق رايلز و نريد توزيع التطبيق للجميع، كما نريد من بياناتنا أن تشتغل على أكبر عدد ممكن من قاعدة البيانات تستطيع التعامل مع رايلز مثل MySQL،PostregSQL، SQLite، SQLServer و Oracle. بعبارة أخرى نريد تعريف لمخطط البيانات من غير التفكير في كيفية و طريقة كتابة الSQL.</p>

<!-- more -->


<p>أول مايجب القيام به و بعد إنشاء التطبيق هو إرسال الأمر من داخل الملف الرئيسي للبرنامج كالتالي :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/databseschema/railsgeneratemigration.png" title="إنشاء سكريبت الmigration"/></p>

<p>هذا الأمر سيقوم بإنشاء سكريبت الmigration و الذي إسمه يشبه هذا الإسم :  "20130201212100_create_database.rb"، عند فتح السكريبت نجد إحتوائه على وظيفتين up و down. في الوظيفة up سنقوم بإضافة الأوامر الخاصة بإنشاء المخطط البياني بواسطة الأوامر الموجودة في الActive Record الخاصة بإنشاء المخططات البيانية، مثل إنشاء الجداول. العكس يجب فعله في الوظيفة down، بمعنى الأوامر التي تُستعمل من أجل تدمير الجداول التي أنشأتها الوظيفة up.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake db:migrate $</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/databseschema/executionrakedbmigrate.png" title="مراحل إنشاء الجداول عن طريق السكريبت"/></p>

<p>الأن يمكننا التأكد داخل قاعدة بياناتنا (SQLLite) بأن الجداول تم إنشاءها بطريقة صحيحة.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/databseschema/sqliteshowtables.png" title="رؤية الجداول داخل قاعدة البيانات"/></p>

<p>الفائدة أنه قمنا بإنشاء مخطط بيانات داخل قاعدة البيانات من دون كتابة سطر SQL واحد ومن دون التفكير في أي نوع من القواعد، وهذا من أهم مميزات الActive Record الذي قمنا بتقديمه في درس سابق،</p>
]]></content>
  </entry>
  
</feed>
