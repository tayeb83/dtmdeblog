<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lucene, | مدونة الطيب الضادي]]></title>
  <link href="http://tayeb83.github.com/dtmdeblog/blog/categories/lucene-/atom.xml" rel="self"/>
  <link href="http://tayeb83.github.com/dtmdeblog/"/>
  <updated>2015-07-21T23:12:25+02:00</updated>
  <id>http://tayeb83.github.com/dtmdeblog/</id>
  <author>
    <name><![CDATA[طيب مرابطي]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[بعض محركات البحث التي يمكن تثبيتها على موقعك]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/19/searchengineexamples/"/>
    <updated>2013-02-19T22:45:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/19/searchengineexamples</id>
    <content type="html"><![CDATA[<p>ماهي محركات البحث التي يمكن استعمالها في موقعك :</p>

<p>من أهم الميزات التي يجب أن يتمتع بها أي موقع ويب اخباري هو محرك البحث الذي يحتويه الموقع. عندما يريد المستخدم طرح  سؤال أو البحث على مقال محدد فلا بد أن يقوم بالعملية بطريقة  سريعة و دقيقة في نفس الوقت.
الأمر sql على كامل النص يعتبر حلا سريعا و سهلا و لكن لا يعتبر بتاتا الحل الأمثل من ناحية الفعالية من جهة و من جهة ثانية أن الأمر ليس بالسهل لكتابة محرك بحث بواسطة الأوامر sql.
هذا المقال سيعطيكم لائحة لمجموعة من محركات البحث التي يمكنكم تثبيتها على خادم الويب الخاص بموقعكم. بالاضافة للAPI روبي التي تقوم بذلك.</p>

<!-- more -->


<h2>Google CSE</h2>

<p>هو عبارة عن خدمة تقدمها جوجل لفهرسة الصفحات الخاصة بموقع ويب معين و عرض النتائج في صفحة من اختيارنا بواسطة تصميم اختياري. رغم كونها الحل الأقل فعالية إلا أن هذا المحرك من أسهل المحركات تثبيتا و استعمالا.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/google.jpg" title="google"/></p>

<p><a href="https://github.com/vodafon/google_cse">https://github.com/vodafon/google_cse</a></p>

<h2>Solr</h2>

<p>solr هو محرك البحث مفتوح المصدر الخاص ب
apache سهل التثبيث خاصة على لينوكس يمكنكم استغلاله سريعا و لن تحتاجون إلى عمليات معقدة.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/solr.jpg" title="solr"/></p>

<p><a href="http://sunspot.github.com/">http://sunspot.github.com/</a></p>

<h2>sphinx</h2>

<p>sphinx هو محرك بحث أخر مفتوح المصدر مع جميع الخصائص التي يتمتع بها solr ولكن التثبيث أصعب و يتطلب بعض المعرفة بالنظام و خصائصه.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/sphinx.jpg" title="sphinx"/></p>

<p><a href="http://pat.github.com/riddle/">http://pat.github.com/riddle/</a></p>

<h2>Elasticsearch </h2>

<p>عبارة  عن محرك بحث مبني ب <a href="http://tayeb83.github.com/dtmdeblog/blog/2012/12/28/lucene-introduction/">lucene </a> مثله مثل solr هو لا يستعمل مخطط. الفهرسة  و البحث تتم عبر أوامر HTTP ب JSON لجعلها أكثر مرونة.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/elasticsearch.jpg" title="UMLS"/></p>

<p><a href="https://github.com/PoseBiz/stretcher">https://github.com/PoseBiz/stretcher</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[مقدمة في lucene]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2012/12/28/lucene-introduction/"/>
    <updated>2012-12-28T21:18:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2012/12/28/lucene-introduction</id>
    <content type="html"><![CDATA[<p>في هذا المقال الجديد و كبداية لتوجه جديد في مدونتي بالموازاة مع ماأكتبه عن روبي أون رايلز، قررت الكتابة عن Lucene.  هذا التوجه له دافع مباشر في الحقيقة وهو طبيعة أعمالي في مجال البحث و التي تدور حول محرك بحث طبي، و طبيعة مذكرتي في الدكتوراه و التي دارت حول كل ما يتعلق بمجال المعالجة الآلية للغة و كل مايتعلق بالمكنزات الطبية. على كل حال دعوني أبدأ في مقالي المخصص لlucene و كما عودتكم من جانب تقني أكثر منه "صحفي".</p>

<p> <a href="http://lucene.apache.org/">Lucene</a> عبارة عن مكتبة برمجية مفتوحة المصدر مطورة بالجافا و متوفرة بلغات برمجة أخرى،
والهدف منه إضافة وظائف بحث و فهرسة داخل تطبيقاتكم. المشروع Lucene تتبناه <a href="http://www.apache.org/">The Apache Software Foundation</a>.  المكتبة لا تحتوي على أدوات يمكن إستعمالها مباشرة لفهرسة البيانات لهذا فإنه يجب المرور عبر البرمجة و الكود لوضع حجر
الأساس من أجل إنشاء محرك بحث داخل النصوص.</p>

<h2>المبدأ :</h2>

<p>Lucene يسمح بفهرسة الوثائق أو المستندات. المستندات عبارة عن مجموعة ملفات Excel, Word, PDF أو HTML, و لكن أيضا مجموعة من البيانات منظمة على مجموعة من الحقول. الحقل هو عبارة عن معطى يحتوي على إسم سواء كان هذا الإسم عنوان أو تاريخ النشر أو محتوى المعطى و الذي يُربط بنص، بحيث أن هذا النص هو الذي يُفهرس ثم نقوم بالبحث فيه. مجموعة النصوص تُجمع فيما بعد داخل مجموعة من النصوص تُسمى الفهرس. الفهرس يُمكن أن يحتوي على مئات، آلاف أو ملايين النصوص و يمكننا إنشاء عدد من الفهارس مختلفة حسب إختلاف الإحتياجات. فعليا، الفهرس عبارة عن ملف يقوم lucene بإنشاءه.</p>

<h2>الحصول على Lucene و إستعماله:</h2>

<p>النسخة الحالية هي النسخة 4.0 و هي متوفرة   <a href="http://www.apache.org/dyn/closer.cgi/lucene/java/4.0.0">هنا</a>. الملف من نوع .zip وهو يحتوي علي جميع المكتبات التي نحتاجها من أجل إستخدام مختلف الوظائف التي يقترحها. في باقي المقال سوف أعرض مثال مُبسط بالجافا حول كيفية إستخدام معظم الوظائف الرئيسية المتوفرة.
أول شيئ يُمكن القيام به هو إنشاء مشروع جديد و إدخال أهم المكتبات الرئيسية الموجودة التي تم الحصول عليها، شخصيا أستعمل Eclipse من أجل البرمجة بجافا و أستخدم أيضا النسخة 1.6 من جافا و لكن النسخة 1.5 يمكن إستعمالها من غير مشاكل.</p>

<h2>من النظري إلى التطبيق :</h2>

<p>المثال التالي عبارة عن مشروع مكون من فئة (class) واحدة فقط و لكن يمكن تقسيمه إلى قسمين فهرسة و بحث. قبل البدأ بسرد المثال أنوه أن البيانات التي سنقوم بتداولها عبارة عن أسطر بسيطة و لا تعبر عن بيانات من الحياة العملية و لكن كافية لتشغيل المثال.</p>

<h2>فهرسة البيانات (Indexation) :</h2>

<p>أول مرحلة يجب القيام  بها هي تهيئة البيانات و إنشاء الفهرس للبحث عليه فيما بعد. من أجل ذلك فإن المكتبة توفر الفئات التي تسمح لنا بإنشاء الفهرس. أهم هذه الفئات هي الفئة <a href="http://lucene.apache.org/core/4_0_0/core/org/apache/lucene/index/IndexWriter.html">IndexWriter</a>  و التي تسمح لنا بالتعامل مع الفهرس و الكتابة  فيه : إنشاء الفهرس، إضافة مستند، ... الفئة الأخرى هي ال<a href="http://lucene.apache.org/core/4_0_0/core/org/apache/lucene/analysis/Analyzer.html">Analyzer</a> والتي تحتوي على  الفئات التي تسمح بتقسيم النص إلى كلمات و من ثم تحديد ساق الكلمة، من أهم الفئات التي تُوفرها يمكن ذكر :</p>

<ul>
<li>SimpleAnalyzer :  يٌقسم النص إلى كلمات ثم يُحولها إلى شكلها المصغر.</li>
<li>StopAnalyzer :  يٌقسم النص إلى كلمات، يُحولها إلى شكلها المصغر ثم يحذف الكلمات الفارغة أي الكلمات التي ليست لها فائدة كبيرة عند عملية البحث.</li>
<li>StandardAnalyzer : عبارة عن نسخة كاملة تحتوي علي خصائص الفئتين السابقتين.</li>
</ul>


<p>فئة أخرى يمكن التنويه إليها هي الفئة <a href="http://lucene.apache.org/core/4_0_0/core/org/apache/lucene/document/Document.html">Document</a>  و التي تمثل أصغر محتوى. على سبيل المثال، فهرسة كل الملفات Word داخل مجلد سيضيف إلى الفهرس Lucene مسند Document يُمثل كل ملف. وبالتالي لائحة النتائج التي يُرجعها البحث داخل الفهرس عبارة عن لائحة Documents. بدوره الDocument مُكون من ما نسميه Field أو الحقول  و هي عبارة عن مجموعة فرعية من الDocument. الحقول المتداولة بكثرة هي : العنوان، المؤلف، تاريخ النشر ...وهلم جر.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/introductionLucene.png" title="فهرسة البيانات"/></p>

<h2>البحث (Search) :</h2>

<p> البحث يستلزم إستعمال ستة فئات :</p>

<ul>
<li>IndexSearcher : هي الفئة التي تسمح باستعمال فهرس البحث.</li>
<li>Analyzer : مثل الفهرسة فإن فئات تحليل النصوص يدخلن في عملية البحث من أجل تحليل الكلمات المستعملة في البحث.</li>
<li>QueryParser : من أجل تحليل كلمة البحث و تحويلها إلى سؤال مفهوم لLucene.</li>
<li>Query : عبارة عن كائن (object) يمثل سؤال المستخدم والذي سوف يستعمل من طرف  IndexSearcher.</li>
<li>Hits : عبارة عن لائحة النتائج للبحث.</li>
<li>Hit : عضو من اللائحة.</li>
</ul>


<p>و أخير الDocument والذي يمثل المسند كما تمت فهرسته.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchLucene.png" title="البحث في الفهرس"/></p>

<p>في الأخير، لو تنجحون بتشغيل المثال : الفهرسة ثم البحث فإن النتيجة التي تُظهرها الشاشة عبارة عن كل الأسطر التي تمت فهرستها و التي تحتوي على الكلمة "lucene".</p>
]]></content>
  </entry>
  
</feed>
